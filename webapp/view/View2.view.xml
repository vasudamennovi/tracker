<mvc:View controllerName="ztpr.zticketprocessing.controller.View2"
    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"
    xmlns="sap.m"
    xmlns:tnt="sap.tnt"
    xmlns:f="sap.ui.layout.form"
    xmlns:layout="sap.ui.layout"
    xmlns:core="sap.ui.core"
    xmlns:m="sap.m"
    xmlns:s="sap.suite.ui.commons"
    xmlns:goals="sap.uxap.sample.SharedBlocks.goals"
    xmlns:u="sap.uxap"
    xmlns:t="sap.ui.table"
    xmlns:html="http://www.w3.org/1999/xhtml">
    <App id="app">
        <pages>
            <Page id="page" title="{=${appView>/visible} === true ? 'Development Tracker - Manage': 'Development Tracker - Create'}" showNavButton="true" navButtonPress="backpage">
                <content>
                    <ObjectHeader visible="{appView>/visible}" icon="sap-icon://employee" iconDensityAware="true" iconAlt="Denise Smith" imageShape="Square" responsive="true" title="Creator: {datamodel2>/CreatedBy}" number="AGING: {globalModel>/ticketage}" intro="RICEF ID:{datamodel2>/RICEF_ID}" backgroundDesign="Solid">
                        <ObjectAttribute id="headerID" title="{path: 'datamodel2>/TcType'}" text="{datamodel2>/DevStatus}" />
                        <!-- <ObjectAttribute text="Request Date:{datamodel1>/RequestDate}" />
		<ObjectAttribute text="Buisness Unit:{datamodel1>/BusinessUnit}" />
		<ObjectAttribute text="Functional Consultant:{datamodel1>/FunctionalConsultant}" /> -->
                    </ObjectHeader>
                    <!-- <u:ObjectPageHeaderContent>
		<u:content>
					<f:SimpleForm id="SimpleFormDisplay35479" editable="true" layout="ResponsiveGridLayout" breakpointL="1024" breakpointM="600" breakpointXL="1440" labelSpanXL="4" labelSpanL="4" labelSpanM="2" labelSpanS="2" adjustLabelSpan="true" emptySpanXL="2" emptySpanL="2" emptySpanM="1" emptySpanS="1" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false">
			<f:content>
			
			
			<tnt:InfoLabel icon="sap-icon://employee" id="il1" text=" Ticket Number:{datamodel1>/TicketNumber}" colorScheme="7"/>
			<tnt:InfoLabel id="il2" text=" Creater Name:{datamodel1>/Requester}" colorScheme="7"/>
				
				
			</f:content>
			</f:SimpleForm>
			</u:content>
			</u:ObjectPageHeaderContent> -->
                    <!-- <OverflowToolbar>
					<ToolbarSpacer/>
					
					<Text text=" Ticket Number:{datamodel1>/TicketNumber}"/>

					</OverflowToolbar> -->

                    <IconTabBar id="idIconTabBar" select="onFilterSelect" class="sapUiResponsivePadding--header sapUiResponsivePadding--content">
                        <items>
                            <IconTabFilter icon="sap-icon://form" iconColor="Positive" text="Details" key="Details">
                                <VBox class="sapUiSmallMargin">
                                    <!--   <f:SimpleForm id="SimpleFormDisplay354" editable="true" layout="ResponsiveGridLayout" breakpointL="1024" breakpointM="600" breakpointXL="1440" labelSpanXL="4" labelSpanL="4" labelSpanM="2" labelSpanS="2" adjustLabelSpan="true" emptySpanXL="2" emptySpanL="2" emptySpanM="1" emptySpanS="1" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false"> -->

                                    <f:SimpleForm id="SimpleFormChange480_Trial" editable="true" layout="ResponsiveGridLayout" labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="3" columnsL="2" columnsM="2" singleContainerFullSize="false">
                                        <f:content>
                                            <core:Title text="Ticket Reference" />
                                            <Label text="RICEF ID/Task ID" required="true"></Label>
                                    
                                            <Input value="{datamodel2>/RICEF_ID}" id="ricefID" editable="{=${datamodel2>/Flag} ==='X'}"></Input>
                                            <Label text="Charm ID"></Label>
                                            <Input value="{datamodel2>/CHARM_ID}"></Input>
                                            <Label text="Description" required="true" />
                                            <Input id="desc" width="100%" value="{datamodel2>/Description}" editable="{=${datamodel2>/Flag} ==='X'}" maxLength="126" />
                                            <!-- editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                            <Label text="Dev Type" required="true" />

                                            <Select id="tickettyep" forceSelection="false" selectedKey="{datamodel2>/TcType}" items="{
						 path:'tickettyep>/',
						 templateShareable:false
						 }" change="Get_BenifitType">
                                                <!-- editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                                <core:Item text="{tickettyep>InputTc}" key="{tickettyep>InputTc}" />
                                            </Select>
                                            <Label text="Project Name" id="projId" required="true" visible="{= ${datamodel2>/TcType} === 'Project' }" />
                                            <Input value="{datamodel2>/ProjectName}" id="projectInputId" visible="{= ${datamodel2>/TcType} === 'Project' }" />
                                            <Label text="Module" required="true" />
                                            <Select id="idmodule" forceSelection="false" selectedKey="{datamodel2>/ModuleTc}" items="{
						 path:'modulemodel>/',
						 templateShareable:false
						 }" change="Get_BenifitType" editable="{=${datamodel2>/Flag} ==='X'}">
                                                <core:Item text="{modulemodel>InputTc}" key="{modulemodel>InputTc}" />
                                            </Select>
                                            <!-- <Input width="100%" value="{datamodel2>/ModuleTc}" editable="{=${datamodel1>/flag} !=='D'}" showValueHelp="true"/> -->
                                            <!-- <Input id="md" valueHelpRequest="mduledetails" showValueHelp="true" showSuggestion="true" value="{datamodel2>/ModuleTc}" suggestionItems="{modulemodel>/}" editable="{=${datamodel2>/Flag} ==='X'}"> editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}"
							<suggestionItems>
							<core:Item text="{modulemodel>InputTc}" key="{modulemodel>InputTc}"/>
							</suggestionItems>
							</Input> -->
                                            <Label text="Region" required="true" />
                                            <Select id="Region" forceSelection="false" selectedKey="{datamodel2>/BusnUnit}" items="{
						 path:'regionModel>/',
						 templateShareable:false
						 }" change="onBUSelect">
                                                <core:Item text="{regionModel>InputTc}" key="{regionModel>InputTc}" />
                                            </Select>
                                            <!-- <Input width="100%" value="{datamodel2>/BusnUnit}" valueHelpRequest="BUdetails" showValueHelp="true" editable="{=${datamodel2>/Flag} ==='X'}" suggestionItems="{BUModel>/}" showSuggestion="true">
				   <suggestionItems>
							<core:Item text="{BUModel>InputTc}" key="{BUModel>InputTc}"/>
							</suggestionItems>
				</Input> -->
                                            <Label text="FS Reference" />
                                            <Input value="{datamodel2>/FsTcRef}" editable="{
												parts: [
													{path:'datamodel2>/TicketStatus'},
													{path:'datamodel2>/Flag'}
												],
												formatter: '.fn_FieldHandle'
											}" maxLength="80" />

                                            <!-- editable="{= (${datamodel2>/Flag} ==='S') ||  (${datamodel2>/Flag} ==='CR')
                ||  (${datamodel2>/Flag} ==='CRD') || (${datamodel2>/Flag} ==='NCR') || (${datamodel2>/Flag} ==='T') || (${datamodel2>/Flag} ==='S1') ||
                (${datamodel2>/Flag} ==='UP') || (${datamodel2>/Flag} ==='UT') || (${datamodel2>/Flag} ==='UA') || (${datamodel2>/Flag} ==='A')
                || (${datamodel2>/Flag} ==='E' )|| (${datamodel2>/Flag} ==='H') || (${datamodel2>/Flag} ==='UH') || (${datamodel2>/Flag} ==='PR')}" -->
                                            <Label text="FS Description" />
                                            <Input value="{datamodel2>/FsDes}" editable="{
												parts: [
													{path:'datamodel2>/TicketStatus'},
													{path:'datamodel2>/Flag'}
												],
												formatter: '.fn_FieldHandle'
											}" maxLength="80" />
                                            <Label text="Dependent CR"></Label>
                                            <Input value="{datamodel2>/DefectCount}" id="dependentCR"></Input>
                                            <Label text="Creation Date" required="true" />
                                            <DatePicker value="{path: 'datamodel2>/FsTcCre'}" />

                                            <Label text="Ticket Expected Completion Date" />
                                            <DatePicker value="{path:'datamodel2>/FsTargetCom'}" />

                                            <core:Title text="Development Details" />
                                            <Label text="System Details" required="true" />

                                            <!-- <Input value="{datamodel2>/SysDetails}" editable="{=${datamodel2>/Flag} ==='X'}" required="true" maxLength="10"/> -->
                                            <Select id="sysdel" forceSelection="false" selectedKey="{datamodel2>/SysDetails}" editable="{
												parts: [
													{path:'datamodel2>/TicketStatus'},
													{path:'datamodel2>/Flag'}
												],
												formatter: '.fn_FieldHandle'
											}" items="{
						 path:'sysDetailModel>/',
						 templateShareable:false
						 }" change="onRICEFTypeChange">
                                                <core:Item text="{sysDetailModel>InputTc}" key="{sysDetailModel>InputTc}" />
                                            </Select>
                                            <Label text="RICEF Type" required="true" />
                                            <!-- <Input width="100%" value="{datamodel2>/DevType}" editable="{=${datamodel1>/flag} !=='D'}"/> -->
                                            <!-- <Input id="devtype" valueHelpRequest="dev_details" showValueHelp="true" showSuggestion="true" suggestionItems="{devtypemodel>/}" value="{datamodel2>/DevType}" editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}">
							<suggestionItems>
							<core:Item text="{devtypemodel>InputTc}" key="{devtypemodel>InputTc}"/>
							</suggestionItems>
							</Input> -->
                                            <Select id="devtype" forceSelection="false" selectedKey="{datamodel2>/DevType}" editable="{
												parts: [
													{path:'datamodel2>/TicketStatus'},
													{path:'datamodel2>/Flag'}
												],
												formatter: '.fn_FieldHandle'
											}" items="{
						 path:'devtypemodel>/',
						 templateShareable:false
						 }" change="onRICEFTypeChange">
                                                <core:Item text="{devtypemodel>InputTc}" key="{devtypemodel>InputTc}" />
                                            </Select>
                                            <Label text="Other RICEF Type" id="otherRicefLabel" visible="{= ${datamodel2>/DevType} === 'Others' }" required="true" />
                                            <Input id="otherRicefInput" value="{datamodel2>/OtherType}" visible="{= ${datamodel2>/DevType} === 'Others' }" />
                                            <Label text="RICEF Status" required="true" />
                                            <Select id="devsts" forceSelection="false" selectedKey="{datamodel2>/DevStatus}" items="{ path: 'devstatusmodel>/', templateShareable: false }" change="onRicefStatusChange">
                                                <core:Item text="{devstatusmodel>InputTc}" key="{devstatusmodel>InputTc}" />
                                            </Select>

                                            <Label text="Planned Starting Date"></Label>
                                            <DatePicker id="planstartdate" value="{path:'datamodel2>/PlannedStartingDate'}"></DatePicker>
                                            <Label text="Planned Ending Date"></Label>
                                            <DatePicker id="planenddate" value="{path:'datamodel2>/PlannedEndingDate'}"></DatePicker>
                                            <Label text="Actual Starting Date"></Label>
                                            <DatePicker id="actualstartdate" value="{path:'datamodel2>/ActualStartingDate'}" change="onDateChange"></DatePicker>

                                            <Label text="Actual Ending Date"></Label>
                                            <DatePicker id="actualenddate" value="{path:'datamodel2>/ActualEndingDate'}" change="onDateChange"></DatePicker>

                                            <Label text="MD Efforts"></Label>
                                            <Input id="mdEfforts" value="{datamodel2>/MDEfforts}" editable="true"></Input>

                                            <Label text="Ticket Creation Date" visible="false"></Label>
                                            <DatePicker visible="false" value="{dateTimeModel>/TcCreate}"></DatePicker>
                                            <Label text="Ticket Creation Time" visible="false"></Label>
                                            <Input value="{dateTimeModel>/TcTime}" visible="false"></Input>
                                            <Label text="FSD Walkthrough Date" />
                                            <DatePicker id="fsdate" value="{path:'datamodel2>/FsReceDate'}" />
                                            <!-- editable="{=${datamodel2>/TechFlag} ==='X'}"  -->
                                            <Label text="Priority" required="true" />
                                            <!-- <Input width="100%" value="{datamodel2>/Priority}" editable="{=${datamodel1>/flag} !=='D'}"/> -->
                                            <!-- <Input id="priority" valueHelpRequest="pry_details" showValueHelp="true" value="{datamodel2>/Priority}" editable="true"/> -->

                                            <Select id="prioritys" forceSelection="false" selectedKey="{datamodel2>/Priority}" editable="{
												parts: [
													{path:'datamodel2>/TicketStatus'},
													{path:'datamodel2>/Flag'}
												],
												formatter: '.fn_FieldHandle'
											}" items="{
						 path:'prioritymodel>/',
						 templateShareable:false
						 
						 }" change="Get_BenifitType">
                                                <!-- enabled="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                                <core:Item text="{prioritymodel>InputTc}" key="{prioritymodel>InputTc}" />
                                            </Select>
                                            <Label text="Complexity" required="true" />
                                            <!-- <Input width="100%" value="{datamodel2>/Complexity}" editable="{=${datamodel1>/flag} !=='D'}"/> -->

                                            <!-- <Input id="complex" valueHelpRequest="complexity_details" showValueHelp="true" value="{datamodel2>/Complexity}" editable="true"/> -->

                                            <Select id="complex" forceSelection="false" selectedKey="{datamodel2>/Complexity}" editable="{
												parts: [
													{path:'datamodel2>/TicketStatus'},
													{path:'datamodel2>/Flag'}
												],
												formatter: '.fn_FieldHandle'
											}" items="{
						 path:'complexmodel>/',
						 templateShareable:false
						 }" change="Get_BenifitType">
                                                <core:Item text="{complexmodel>InputTc}" key="{complexmodel>InputTc}" />
                                                <!-- enabled="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                            </Select>
                                            <Label text="Code Review Date" visible="{=${datamodel2>/CrHide} === 'X'}" />
                                            <!--  <Input value="{datamodel2>/CrDate}" visible="{=${datamodel2>/Cr} === 'X'}"/> -->
                                            <DatePicker id="fswdate" editable="false" value="{path:'datamodel2>/CrDate'}" visible="{=${datamodel2>/CrHide} === 'X'}" />
                                            <Label text="Code Review Time" visible="{=${datamodel2>/CrHide} === 'X'}" />
                                            <Input editable="false" value="{datamodel2>/CrTime}" visible="{=${datamodel2>/CrHide} === 'X'}" />

                                            <core:Title text="Requester Details" />
                                            <!--  <Label text="Requested By" required="true"/>
				<Input width="100%" value="{datamodel2>/Requester}" editable="{=${datamodel1>/flag} !=='D'}"/>
				 <Input id="rqs" valueHelpRequest="req_details" showValueHelp="true" value="{datamodel2>/Requester}" showSuggestion="true" liveChange="onLiveChgeReq" suggestionItems="{usermodel>/}" change="onReqBy" editable="{=${datamodel2>/Flag} ==='X'}"> editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}"
							 <suggestionItems>
							<core:Item text="{usermodel>InputTc}" key="{usermodel>Name}"/>
								<core:ListItem text="{usermodel>Name}" additionalText="{usermodel>InputTc}" key="{usermodel>InputTc}" />
							 </suggestionItems></Input>
							 
							
							
				<Label text="Request Date" />
				<Input width="100%" value="{datamodel2>/ReqDate}" editable="{=${datamodel1>/flag} !=='D'}"/>
				<DatePicker id="reqdate" value=
				 "{path:'datamodel2>/ReqDate', type:'sap.ui.model.type.DateTime',formatOptions:{ pattern:'dd/MM/yyyy' } }" change="dateflag" editable="{=${datamodel2>/Flag} ==='X'}"/>  -->
                                            <!-- editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->

                                            <Label text="Functional Consultant" required="true" />
                                            <!-- <Input width="100%" value="{datamodel2>/FuncConst}" editable="{=${datamodel1>/flag} !=='D'}" /> -->
                                            <Input id="functional" valueHelpRequest="functional_details" showValueHelp="true" showSuggestion="true" change="onFuncConsul" liveChange="onLiveChgeFunc" value="{datamodel2>/FuncConst}" editable="{=${datamodel2>/Flag} ==='X'}" suggestionItems="{fuctUserModel>/}">
                                                <!-- editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                                <suggestionItems>
                                                    <!-- <core:Item text="{usermodel>InputTc}"/> -->
                                                    <core:ListItem text="{fuctUserModel>Name}" additionalText="{fuctUserModel>InputTc}" key="{fuctUserModel>InputTc}" />
                                                </suggestionItems>
                                            </Input>
                                            <Label text="Technical Consultant" required="true" />
                                            <!-- <Input width="100%" value="{datamodel2>/TechPs}" editable="{=${datamodel1>/flag} !=='D'}"/> -->
                                            <Input id="technical" valueHelpRequest="technical_details" showValueHelp="true" showSuggestion="true" change="onTech" liveChange="onLiveChgeTech" value="{datamodel2>/TechPs}" editable="{=${datamodel2>/Flag} ==='X' || ${datamodel2>/AddFlag} ==='XT'}" suggestionItems="{techUserModel>/}">
                                                <!-- editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                                <suggestionItems>
                                                    <!-- <core:Item text="{usermodel>InputTc}"/> -->
                                                    <core:ListItem text="{techUserModel>Name}" additionalText="{techUserModel>InputTc}" key="{techUserModel>InputTc}" />
                                                </suggestionItems>
                                            </Input>

                                            <!--  <core:Title text="Buisness Details" />
                <Label text="Business Unit" required="true"/>
				<Input width="100%" value="{datamodel2>/BusnUnit}" valueHelpRequest="BUdetails" showValueHelp="true" editable="{=${datamodel2>/Flag} ==='X'}" suggestionItems="{BUModel>/}" showSuggestion="true"> editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}"
				   <suggestionItems>
							<core:Item text="{BUModel>InputTc}" key="{BUModel>InputTc}"/>
							</suggestionItems>
				</Input>
				<Label text="Business Value" required="true"/>
				<Input width="100%" value="{datamodel2>/BusnValue}" editable="{=${datamodel2>/Flag} ==='X'}"/> editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}"
				<Label text="Business Value details" required="true"/>
				<Input width="100%" value="{datamodel2>/BusnValDet}" editable="{=${datamodel2>/Flag} ==='X'}"/> editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                        </f:content>
                                    </f:SimpleForm>
                                </VBox>
                            </IconTabFilter>
                            <IconTabFilter icon="sap-icon://hr-approval" iconColor="Critical" id="idTeams" text="Teams" key="Teams">
                                <VBox class="sapUiSmallMargin">
                                    <f:SimpleForm id="SimpleFormDisplay3545" editable="true" layout="ResponsiveGridLayout" title="Teams" labelSpanXL="3" labelSpanL="3" labelSpanM="3" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="4" emptySpanL="4" emptySpanM="4" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="false">
                                        <f:content>
                                            <Label design="Bold" text="Technical Consulatnt" />
                                            <Input width="50%" valueHelpRequest="technical_Team" showValueHelp="false" value="{datamodel2>/TechPs}" editable="true" />
                                            <Label design="Bold" text="FT By" required="true" />
                                            <Input id="idUtby" width="50%" valueHelpRequest="UT_Team" showValueHelp="true" showSuggestion="true" suggestionItems="{utUserModel>/}" liveChange="onLiveChgeUt" value="{datamodel2>/UtTester}" change="onUTBy">
                                                <!-- editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                                <suggestionItems>
                                                    <!-- <core:Item text="{usermodel>InputTc}"/> -->
                                                    <core:ListItem text="{utUserModel>Name}" additionalText="{utUserModel>InputTc}" key="{utUserModel>InputTc}" />
                                                </suggestionItems>
                                            </Input>
                                            <Label design="Bold" text="Functional Consultant" />
                                            <Input width="50%" valueHelpRequest="Functional_Consultant" showValueHelp="false" value="{datamodel2>/FuncConst}" editable="true" />
                                            <Label design="Bold" text="UAT By" />
                                            <!-- <Input id="idUat" width="50%" valueHelpRequest="UAT_Team" showValueHelp="true" showSuggestion="true" suggestionItems="{usermodel>/}" value="{datamodel2>/UatTester}" editable="{=${datamodel2>/Flag} ==='X'}" change="onUATBy" liveChange="onLiveChgeUat">  editable="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}"
							<suggestionItems>
							<core:Item text="{usermodel>InputTc}"/>
							<core:ListItem text="{usermodel>Name}" additionalText="{usermodel>InputTc}" key="{usermodel>InputTc}" />
							 </suggestionItems></Input> -->
                                            <Input id="idUAt" value="{datamodel2>/UatTester}" width="50%" editable="{=${datamodel2>/Flag} ==='X'}" maxLength="39" />
                                            <Label design="Bold" text=" UAT Email-ID" />
                                            <Input type="Email" id="UATEmail" value="{datamodel2>/UatMail}" width="50%" editable="{=${datamodel2>/Flag} ==='X'}" maxLength="240" />
                                        </f:content>
                                    </f:SimpleForm>
                                </VBox>
                            </IconTabFilter>
                            <IconTabFilter icon="sap-icon://attachment" iconColor="Negative" text="Attachments" key="attachments">
                                <!-- <Table id="files" growing="true" sticky="ColumnHeaders" inset="true" mode="Delete" items="{dashboard>/UploadedAttachment}">
						<headerToolbar>
								<OverflowToolbar class="MTB">
										<Title text="Attachments"/>

										<ToolbarSpacer/>
										<Button icon="sap-icon://add" press="add_attachment" type="Emphasized"/>
								</OverflowToolbar>
							</headerToolbar>
							
					<columns>
						<Column hAlign="Left">
							<Label text="FileName"/>
						</Column>
						<Column hAlign="Left">
							<Label text="Type"/>
						</Column>
						<Column hAlign="Left">
							<Label text="Status"/>
					</Column>
                    <Column hAlign="Left">
							
					</Column>
				    </columns>
						<items>
						<ColumnListItem>
							<Text text="{dashboard>Filename}"/>
						       <Text text="{dashboard>Type}"/>
							<Text text="Upload"/>
							<Button icon="sap-icon://download" type="Emphasized" press="filedownload"/>
							
						</ColumnListItem>
						</items>
				
				</Table> -->

                                <Table id="files" growing="true" sticky="ColumnHeaders" inset="true" items="{dashboard>/UploadedAttachment}">
                                    <headerToolbar>
                                        <OverflowToolbar class="MTB">
                                            <Title text="Attachments" />

                                            <ToolbarSpacer />
                                            <Button icon="sap-icon://add" press="add_attachment" type="Emphasized" visible="{= (${datamodel2>/Flag} ==='Y') || (${datamodel2>/Flag} ==='X') || (${datamodel2>/Flag} ==='Y2')}" />
                                            <!-- visible="{=${datamodel2>/Flag} ==='S' || ${datamodel2>/Flag} ==='X'}" -->
                                        </OverflowToolbar>
                                    </headerToolbar>
                                    <columns>
                                        <Column class="dashboard">
                                            <Label text="File Name" />
                                        </Column>
                                        <Column>
                                            <Label text="File Type" />
                                        </Column>

                                        <Column>
                                            <Label text="Uploaded Date" />
                                        </Column>

                                        <!-- <Column class="" width="60px">
												<Label text="" />
											</Column> -->
                                        <Column class="Content" width="60px">
                                            <Label text="" />
                                        </Column>
                                        <Column class="Content" width="60px">
                                            <Label text="" />
                                        </Column>
                                    </columns>
                                    <items>
                                        <ColumnListItem class="dashbord">
                                            <Text text="{dashboard>Filename}" />
                                            <Text text="{dashboard>Type}" />

                                            <HBox>
                                                <core:Icon src="sap-icon://appointment-2" color="#3181c7" class="myCustomIconSpacing" />

                                                <Text text="{path:'dashboard>Datestamp'}" />
                                                <!-- <Text text="{path:'dashboard>Datestamp', type:'sap.ui.model.type.DateTime',formatOptions:{ pattern:'yyyy/MM/dd' } }"/> -->
                                            </HBox>

                                            <!-- <core:Icon src="{
												parts: [
													{path: 'dashboard>Filename'}
												],
												formatter: '.fnSetIcon'
											}" color="{
												parts: [
													{path: 'dashboard>Filename'}
												],
												formatter: '.fnSetIconColor'
											}" size="21px"></core:Icon> -->

                                            <Button icon="sap-icon://download" visible="true" press="onFiledataDownload" type="Transparent" />

                                            <Button icon="sap-icon://delete" id="idDelFile" visible="{dashboard>isCreated}" press="onFileDelete" enabled="{
												parts: [
													'dashboard>__metadata'
												],
												formatter: '.fnEnableDel'
											}" type="Transparent" />
                                        </ColumnListItem>
                                    </items>
                                </Table>
                            </IconTabFilter>

                            <IconTabFilter icon="sap-icon://history" iconColor="Critical" text="History Log" key="Approve" id="historyTab">
                                <Table id="log" items="{historylog>/}" growing="true" sticky="ColumnHeaders" alternateRowColors="true">
                                    <!-- insent="true" -->
                                    <headerToolbar>
                                        <OverflowToolbar>
                                            <Label design="Bold" text="Items ({= ${historylog>/}.length})" />
                                            <ToolbarSpacer />
                                        </OverflowToolbar>
                                    </headerToolbar>
                                    <columns>
                                        <Column hAlign="Center" width="10%" mergeDuplicates="true">
                                            <Label text="RICEF ID" />
                                        </Column>
                                        <Column hAlign="Center" width="10%" mergeDuplicates="true" visible="false">
                                            <Label text="Status" wrapping="true" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Action By" wrapping="true" />
                                        </Column>
                                        <Column hAlign="Center" width="10%" mergeDuplicates="true">
                                            <Label text="Date" />
                                        </Column>
                                        <Column hAlign="Center" width="10%" mergeDuplicates="true">
                                            <Label text="Time" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Aging" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Field Name" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Old Value" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="New Value" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Remarks" wrapping="true" />
                                        </Column>
                                    </columns>
                                    <items>
                                        <ColumnListItem>
                                            <tnt:InfoLabel id="il6" text="{historylog>RICEF_ID}" colorScheme="6" />

                                            <Text text="{historylog>TicketStatus}" />
                                            <tnt:InfoLabel id="il8" text="{historylog>ActionBy}" displayOnly="false" colorScheme="{ parts: [ {path: 'historylog>ActionBy'} ], formatter: '.actionBy' }" />
                                            <Text text="{historylog>DateTc}" />
                                            <!-- <FlexBox>
						        <tnt:InfoLabel id="il7" icon="sap-icon://away" colorScheme="6"/>
						        <Text text=""/>
						        <Text text="{historylog>TimeTc}"/>
						        </FlexBox> -->
                                            <Text text="{historylog>TimeTc}" />
                                            <Label text="{historylog>Aging}" design="Bold" />
                                            <Text text="{historylog>ColumnName}" wrapping="true" />
                                            <Text text="{historylog>OldValue}" wrapping="true" />
                                            <Text text="{historylog>NewValue}" wrapping="true" />
                                            <Text text="{historylog>Remarks}" wrapping="true" />
                                        </ColumnListItem>
                                    </items>
                                </Table>
                            </IconTabFilter>
                            <IconTabFilter icon="sap-icon://activity-assigned-to-goal" iconColor="Critical" text="Defect Log" key="Approve" id="DefectTab">
                                <Table id="defectlog" items="{path:'DefectLog>/'}" growing="true" sticky="ColumnHeaders" alternateRowColors="true">

                                    <headerToolbar>
                                        <OverflowToolbar>
                                            <Label design="Bold" text="Items ({= ${DefectLog>/}.length})" />
                                            <ToolbarSpacer />
                                        </OverflowToolbar>
                                    </headerToolbar>
                                    <columns>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Defect Count" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="RICEF ID" wrapping="true" />
                                        </Column>
                                        <Column hAlign="Center" width="10%">
                                            <Label text="Defect" wrapping="true" />
                                        </Column>
                                        <Column hAlign="Center" width="15%">
                                            <Label text="Description" wrapping="true" />
                                        </Column>
                                        <Column hAlign="Center" width="15%">
                                            <Label text="Development Status" wrapping="true" />
                                        </Column>
                                        <Column hAlign="Center" width="15%">
                                            <Label text=" Development Start Date" />
                                        </Column>
                                        <Column hAlign="Center" width="15%">
                                            <Label text="Dev Expt. End Date" />
                                        </Column>
                                        <Column>
                                        <Label text="Remarks"></Label>
                                        </Column>

                                    </columns>
                                    <items>
                                        <ColumnListItem type="Navigation" press="onDefectRow">
                                            <Text text="{DefectLog>DEFECT_NO}"></Text>
                                            <Text text="{DefectLog>RICEF_ID}"></Text>
                                            <Text text="{DefectLog>DEFECT}"></Text>
                                            <Text text="{DefectLog>DESCRIPTION}"></Text>
                                            <Text text="{DefectLog>STATUS}"></Text>
                                            <Text text="{DefectLog>START_DATE}"></Text>
                                            <Text text="{DefectLog>END_DATE}"></Text>
                                            <Text text="{DefectLog>REMARKS}"></Text>

                                        </ColumnListItem>
                                    </items>
                                </Table>
                            </IconTabFilter>
                        </items>
                    </IconTabBar>
                </content>
                <footer>
                    <OverflowToolbar>
                        <ToolbarSpacer />

                        <!-- added remarks mandatory for query button -->
                        <Button text="Remarks" type="Default" press="onRemarks" visible="{=${datamodel2>/RemFlag} ==='X'}" />



                        <Button text="Send For Code Review" type="Emphasized" visible="{=${datamodel2>/Cr} ==='X'}" press="onSndCodeReview" />
                        <Button text="Code Reviewed" type="Back" visible="{=${datamodel2>/CrDone} ==='X'}" press="onCodeReview" />
                        <Button text="Code Review Not Required" type="Reject" visible="{=${datamodel2>/Ncr} ==='X'}" press="onNotCodeReview" />

                        <Button text="Save" type="Accept" press="save1" visible="{=${datamodel2>/Save1} ==='X'}" />
                        <Button text="Save" type="Accept" press="save" visible="{=${datamodel2>/Zsave} ==='X'}" />
                        <Button text="Submit" type="Success" press="submit" visible="{=${datamodel2>/Submit} ==='X'}" />

                        <Button text="Accept" type="Accept" press="Accept" visible="{=${datamodel2>/Accept} ==='X'}" />
                        <Button id="queryButton" text="Query" type="Attention" press="Enquiry" visible="{=${datamodel2>/Enq} === 'X'}" />
                        <Button text="Hold" type="Reject" press="Hold" visible="{=${datamodel2>/Hold} ==='X'}" />
                        <Button text="Resume" type="Emphasized" press="On_Hold" visible="{=${datamodel2>/Unhold} ==='X'}" />

                        <Button text="Send For UT" type="Emphasized" press="UT" visible="{=${datamodel2>/Ut} ==='X'}" />
                        <Button text=" Send For UAT" type="Emphasized" press="UAT" visible="{=${datamodel2>/Uat} ==='X'}" />
                        <Button text=" Send For PRD" type="Emphasized" press="PRD" visible="{=${datamodel2>/PrdFlag} ==='X'}" />

                        <Button text="Update" type="Accept" press="onUpdateReq" visible="{=${datamodel2>/UpdateAttach} ==='X'}" />
                        <Button text="Update" type="Accept" press="onUpdate" visible="{=${datamodel2>/UpdateFlag} ==='X'}" />

                        <Button text="Delete" type="Reject" press="Deletetc" visible="{=${datamodel2>/DeleteTc} ==='X'}" />
                        <Button text="Cancel" type="Reject" press="Reject" visible="{=${datamodel2>/Cancel} ==='X'}" />
                        <Button text="Close Development" type="Reject" press="CloseTicket" visible="{=${datamodel2>/CloseFlag} ==='X'}" />
                    </OverflowToolbar>
                </footer>
            </Page>
        </pages>
    </App>
</mvc:View>
